syntax = "proto3";

package booking.v1;

service BookingService {
  rpc CreateEvent(CreateEventRequest) returns (CreateEventResponse);
  rpc GetEvent(GetEventRequest) returns (GetEventResponse);
  rpc CreateBooking(CreateBookingRequest) returns (CreateBookingResponse);
  rpc GetBooking(GetBookingRequest) returns (GetBookingResponse);
//  rpc UpdateEvent(UpdateEventRequest) returns (UpdateEventResponse);
//  rpc AddGuest(AddGuestRequest) returns (AddGuestResponse);
//  rpc RemoveGuest(RemoveGuestRequest) returns (RemoveGuestResponse);
//  rpc ListEvents(ListEventsRequest) returns (ListEventsResponse);
//  rpc CancelEvent(CancelEventRequest) returns (CancelEventResponse);
//  rpc DeleteEvent(DeleteEventRequest) returns (DeleteEventResponse);
}

enum EventStatus {
  EVENT_STATUS_UNSPECIFIED = 0;
  EVENT_STATUS_ACTIVE = 1;
  EVENT_STATUS_CANCELED = 2;
  EVENT_STATUS_FULL = 3;
}

enum EventType {
  EVENT_TYPE_UNSPECIFIED = 0;
  EVENT_TYPE_EVENT = 1;
  EVENT_TYPE_TASK = 2;
  EVENT_TYPE_MEETING = 3;
}

message TimeData {
  string timezone = 1;
  string date_time = 2;
}

message Event {
  string id = 1;
  string name = 2;
  EventType event_type = 3;
  EventStatus status = 4;
  TimeData start = 5;
  TimeData end = 6;
  string recurrence_rule = 7;
  string organizer_key = 8;
  Cancellation cancellation = 9;
  repeated Slot slots = 10;
  int64 slot_duration = 11;
  int32 max_guests = 12;
  int64 created_at = 13;
  int64 updated_at = 14;
}

message Slot {
  string id = 1;
  string event_id = 2;
  TimeData start = 3;
  TimeData end = 4;
  int32 max_guests = 5;
  int64 created_at = 6;
  int64 updated_at = 7;
}

message Booking {
  string id = 1;
  string first_name = 2;
  string last_name = 3;
  string booking_holder_key = 4;
  string slot_id = 5;
  Slot slot = 6;
  int32 number_of_people = 7;
  string message = 8;
  int64 created_at = 9;
  int64 updated_at = 10;
}

message Cancellation {
  string canceled_by = 1;
  string reason = 2;
  TimeData created_at = 3;
}

message CreateEventRequest {
  string name = 1;
  string start = 2;
  string end = 3;
  string timezone = 4;
  string organizer_key = 5;
  int64 slot_duration = 6;
  int32 max_guests = 7;
  string recurrence_rule = 8;
  EventType event_type = 9;
}

message CreateEventResponse {
  Event event = 1;
}

message CreateEventsRequest {
  repeated CreateEventRequest events = 1;
}

message CreateEventsResponse {
  repeated Event events = 1;
}

message GetEventRequest {
  string id = 1;
}

message GetEventResponse {
  Event event = 1;
}

message CreateBookingRequest {
  string first_name = 1;
  string last_name = 2;
  string booking_holder_key = 3;
  string slot_id = 4;
  int32 number_of_people = 5;
  string message = 6;
}

message CreateBookingResponse {
  Booking booking = 1;
}

message GetBookingRequest {
  string id = 1;
}

message GetBookingResponse {
  Booking booking = 1;
}